geom_density(
aes(x = Variable, fill = Y),
position = "stack",
alpha = 0.5,
linetype = 0
) +
scale_fill_viridis(discrete = TRUE) +
labs(x = desc_col) +
theme_bw() +
theme(
legend.position = "none",
axis.title.y = element_text(size = 6),
axis.text.y = element_text(angle = 45, size = 7),
axis.title.x = element_text(size = 10),
axis.text.x = element_text(angle = 45, size = 7)
)
#**Bar plot by Target Variable**
p3 <-
ggplot(p3.df, aes(x = Variable, y = n, fill = Y)) +
geom_bar(stat = "identity") +
geom_text(
aes(label = n),
position = position_stack(vjust = 0.5),
color = "white",
size = 3
) +
scale_fill_viridis(discrete = TRUE) +
labs(x = desc_col) +
theme_bw() +
theme(
legend.position = "bottom",
axis.title.y = element_text(size = 6),
axis.text.y = element_text(angle = 45, size = 7),
axis.title.x = element_text(size = 10),
axis.text.x = element_text(angle = 45, size = 7),
legend.title = element_blank(),#element_text(size = 8),
legend.text = element_text(size = 8)
)
ggarrange(ggarrange(p1, p2 , nrow = 2),p3,
ncol = 2)
}
}
load('../easySHARE_rel7_0_0.rda')
data <- easySHARE_rel7_0_0 %>% filter(wave == 6|wave == 7)
data <- data %>% filter(casp != -15)
data %>% filter(ep036_mod == -10) %>% nrow
data %>% filter(ep026_mod == -10) %>% nrow
data %>% filter(ep013_mod == -10) %>% nrow
data %>% filter(ep011_mod == -10) %>% nrow
data %>% filter(ep009_mod == -10) %>% nrow
data %>% filter(ep036_mod == -10 & ep026_mod == -10 & ep013_mod == -10 & ep011_mod == -10 & ep009_mod == -10) %>% nrow
data <- data %>% filter(ep009_mod != -10)
which(names(data) == "casp")
which(names(data) == "ep005_")
unique(data$ep005_)
data$ep005_ <- as.factor(data$ep005_)
table(data$ep005_)
plot_var(96,59,"CASP vs Current job situation",T,0)
which(names(data) == "ep009_mod")
data <- data %>% filter(ep009_mod != -10)
unique(data$ep009_mod)
cats9 <- data %>% filter(ep009_mod == -9)
unique(cats9$ep005_)
table(cats9$ep005_)
data <- data %>% filter(ep009_mod != -10)
plot_var(97,59,"CASP vs Employer",T,0)
unique(data$co007_)
table(data$co007_)
which(names(data) == "col007_")
data$ep009_mod <- as.factor(data$ep009_mod)
plot_var(97,59,"CASP vs Employer",T,0)
unique(data$ep011_mod)
data$ep005_ <- as.factor(data$ep005_)
table(data$ep005_)
which(names(data) == "ep011_mod")
plot_var(98,59,"CASP vs Current job situation",T,0)
data$ep011_mod <- as.factor(data$ep011_mod)
plot_var(98,59,"CASP vs Current job situation",T,0)
which(names(data) == "ep013_mod")
unique(data$ep013_mod)
data$ep013_mod <- as.factor(data$ep013_mod)
plot_var(99,59,"CASP vs Current job situation",T,0)
data$ep013_mod <- as.numeric(data$ep013_mod)
plot_var(99,59,"CASP vs Current job situation",F,0)
data$ep013_mod <- as.numeric(data$ep013_mod)
plot_var(99,59,"CASP vs Current job situation",F,0)
is.numeric(data$ep013_mod)
plot_var(99,59,"CASP vs Current job situation",F,0)
data$ep013_mod <- as.double(data$ep013_mod)
is.numeric(data$ep013_mod)
plot_var(99,59,"CASP vs Current job situation",F,0)
data$ep013_mod <- as.numeric(data$ep013_mod)
is.numeric(data$ep013_mod)
plot_var(99,59,"CASP vs Current job situation",F,0)
data$ep026_mod <- as.factor(data$ep026_mod)
which(names(data) == "ep026_mod")
plot_var(100,59,"CASP vs Current job situation",F,0)
plot_var(100,59,"CASP vs Satisfaction with main job",T,0)
which(names(data) == "ep036_mod")
which(names(data) == "ep036_mod")
unique(data$ep036_mod)
data$ep026_mod <- as.factor(data$ep036_mod)
plot_var(101,59,"CASP vs Satisfaction with main job",T,0)
data$ep026_mod <- as.factor(data$ep036_mod)
data$ep036_mod <- as.factor(data$ep036_mod)
plot_var(101,59,"CASP vs Satisfaction with main job",T,0)
library(dplyr)
library(skimr)
library(ggplot2)
library(viridis)
library(ggpubr)
plot_var <- function(n_y, n_x, desc_col, isContinous, topN = 0) {
#Plot function: Se recibe los parametros
#               * Y: Vector de la columna objetivo (igual longitud de eda_column)
#               * X: Vector de la columna que se realiza el analisis
#               * desc_column: descripcion de la variable a analizar, para fines de grafico
#               * topN: Si se tiene varias categorias seleccionar cuanto sera el top
data_plot <- data[, c(n_y, n_x)]
colnames(data_plot) <- c("Y", "Variable")
data_plot <-
data_plot  %>%  mutate_if(sapply(data_plot, is.character), as.factor)
#isContinous <- typeof(data_plot$Variable) %in% c("double", "numeric") #solo valores continuos
if (topN > 0) {
var.top.df <-
data_plot %>% group_by(Y, Variable) %>% tally() %>% top_n(topN)
var.top <- var.top.df$Variable
p2.df <- data_plot[data_plot$Variable %in% var.top, ]
p1.df <-
data_plot %>% group_by(Variable)  %>% summarise(n = n()) %>% top_n(topN) %>%
arrange(desc(Variable)) %>%
mutate(prop = round(n / sum(n), 3) * 100, 2) %>%
mutate(ypos = cumsum(prop) - 0.5 * prop)
p3.df <-
data_plot %>% group_by(Y, Variable) %>% tally() %>% top_n(topN)
} else {
p2.df <- data_plot
p1.df <-
data_plot %>% group_by(Variable)  %>% summarise(n = n()) %>%
arrange(desc(Variable)) %>%
mutate(prop = round(n / sum(n), 3) * 100, 2) %>%
mutate(ypos = cumsum(prop) - 0.5 * prop)
p3.df <- data_plot %>% group_by(Y, Variable) %>% tally()
}
if (isContinous) {
#******Variables Continuas*****
#******Histograma por Variable Target*****
p1 <- ggplot(data_plot, aes(Variable)) +
geom_histogram(bins = 20 , col = "black", aes(fill = ..count..)) +
scale_fill_viridis(discrete = FALSE) +
labs(x = desc_col) +
theme_classic()
#******Densidad por Variable Target*****
p2 <- ggplot(data_plot) +
geom_density(aes(x = Variable, fill = Y),
alpha = 0.3,
linetype = 0) +
scale_fill_viridis(discrete = TRUE) +
labs(x = desc_col) +
theme_classic() +
theme(legend.position = "bottom")
#******Boxplot por Variable Target*****
p3 <- ggboxplot(
data_plot,
x = "Y",
y = "Variable",
color = "Y",
shape = "Y",
alpha = 0.5,
ylab = "desc_col",
fill = "Y") +
scale_fill_viridis(discrete = TRUE) +
scale_color_viridis(discrete = TRUE)
ggarrange(p1,
ggarrange(p2, p3 , ncol = 2),
nrow = 2)
} else{
p1 <- ggplot(p1.df, aes(x = "", y = prop, fill = Variable)) +
geom_bar(stat = "identity",
width = 1,
color = "white") +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "left",
legend.text = element_text(size = 7),
legend.title = element_text(size = 8)
) +
geom_text(aes(
y = ypos,
label = paste(prop, "%", sep = "")
),
color = "white",
size = 3) +
scale_fill_viridis(discrete = TRUE)
#**Densidad por Variable Target**
p2 <- ggplot(p2.df) +
geom_density(
aes(x = Variable, fill = Y),
position = "stack",
alpha = 0.5,
linetype = 0
) +
scale_fill_viridis(discrete = TRUE) +
labs(x = desc_col) +
theme_bw() +
theme(
legend.position = "none",
axis.title.y = element_text(size = 6),
axis.text.y = element_text(angle = 45, size = 7),
axis.title.x = element_text(size = 10),
axis.text.x = element_text(angle = 45, size = 7)
)
#**Bar plot by Target Variable**
p3 <-
ggplot(p3.df, aes(x = Variable, y = n, fill = Y)) +
geom_bar(stat = "identity") +
geom_text(
aes(label = n),
position = position_stack(vjust = 0.5),
color = "white",
size = 3
) +
scale_fill_viridis(discrete = TRUE) +
labs(x = desc_col) +
theme_bw() +
theme(
legend.position = "bottom",
axis.title.y = element_text(size = 6),
axis.text.y = element_text(angle = 45, size = 7),
axis.title.x = element_text(size = 10),
axis.text.x = element_text(angle = 45, size = 7),
legend.title = element_blank(),#element_text(size = 8),
legend.text = element_text(size = 8)
)
ggarrange(ggarrange(p1, p2 , nrow = 2),p3,
ncol = 2)
}
}
load('../easySHARE_rel7_0_0.rda')
data <- easySHARE_rel7_0_0 %>% filter(wave == 6|wave == 7)
data <- data %>% filter(casp != -15)
data %>% filter(ep036_mod == -10) %>% nrow
data %>% filter(ep026_mod == -10) %>% nrow
data %>% filter(ep013_mod == -10) %>% nrow
data %>% filter(ep011_mod == -10) %>% nrow
data %>% filter(ep009_mod == -10) %>% nrow
data %>% filter(ep036_mod == -10 & ep026_mod == -10 & ep013_mod == -10 & ep011_mod == -10 & ep009_mod == -10) %>% nrow
data <- data %>% filter(ep009_mod != -10)
which(names(data) == "casp")
which(names(data) == "ep005_")
unique(data$ep005_)
data$ep005_ <- as.factor(data$ep005_)
table(data$ep005_)
plot_var(96,59,"CASP vs Current job situation",T,0)
which(names(data) == "ep009_mod")
data <- data %>% filter(ep009_mod != -10)
unique(data$ep009_mod)
cats9 <- data %>% filter(ep009_mod == -9)
unique(cats9$ep005_)
table(cats9$ep005_)
data <- data %>% filter(ep009_mod != -10)
data$ep009_mod <- as.factor(data$ep009_mod)
plot_var(97,59,"CASP vs Employer",T,0)
which(names(data) == "ep011_mod")
unique(data$ep011_mod)
data$ep011_mod <- as.factor(data$ep011_mod)
plot_var(98,59,"CASP vs Current job situation",T,0)
which(names(data) == "ep013_mod")
unique(data$ep013_mod)
data$ep013_mod <- as.numeric(data$ep013_mod)
is.numeric(data$ep013_mod)
plot_var(99,59,"CASP vs Current job situation",F,0)
plot_var(99,59,"CASP vs Current job situation",T,0)
plot_var(99,59,"CASP vs Current job situation",F,0)
which(names(data) == "co007_")
unique(data$co007_)
data$co007_ <- as.factor(data$co007_)
plot_var(102,59,"CASP vs Make ends meet",T,0)
which(names(data) == "thinc_m")
unique(data$thinc_m)
plot_var(103,59,"CASP vs Household net income, imputed",F,0)
which(names(data) == "income_pct_w7")
plot_var(109,59,"CASP vs Household net income, imputed",F,0)
plot_var(109,59,"CASP vs Household net income, imputed",T,0)
data$income_pct_w7 <- as.factor(data$income_pct_w7)
plot_var(109,59,"CASP vs Household net income, imputed",T,0)
plot_var(108,59,"CASP vs Household net income, imputed",T,0)
data$income_pct_w7 <- as.factor(data$income_pct_w6)
plot_var(108,59,"CASP vs Household net income, imputed",T,0)
data$income_pct_w6 <- as.factor(data$income_pct_w6)
plot_var(108,59,"CASP vs Household net income, imputed",T,0)
data$income_pct_w7 <- as.factor(data$income_pct_w7)
plot_var(108,59,"CASP vs Household net income, imputed",T,0)
plot_var(109,59,"CASP vs Household net income, imputed",T,0)
ep005_female <- data %>% filter(ep005_ == 1)
ep005_male <- data %>% filter(ep005_ == 0)
ks.test(ep005_female$casp,ep005_female$casp)
casp_female <- data %>% filter(female == 1)
casp_male <- data %>% filter(female == 0)
ks.test(casp_female$casp,casp_female$casp)
casp_female <- data %>% filter(female == 1)
casp_male <- data %>% filter(female == 0)
ks.test(casp_female$casp,casp_male$casp)
unique(data$ep005_)
ep005_1_female <- data %>% filter(female == 1) %>% filter(ep005_ == 1)
ep005_1_male <- data %>% filter(female == 0) %>% filter(ep005_ == 1)
ks.test(ep005_1_female$ep005_,ep005_1_male$ep005_)
ep005_1_female <- data %>% filter(female == 1) %>% filter(ep005_ == 1)
ep005_1_female <- data %>% filter(female == 1) %>% filter(ep005_ == 1)
ep005_1_male <- data %>% filter(female == 0) %>% filter(ep005_ == 1)
ks.test(ep005_1_female$ep005_,ep005_1_male$ep005_)
ep005_1_female <- data %>% filter(female == 1) %>% filter(ep005_ == 1)
ep005_1_male <- data %>% filter(female == 0) %>% filter(ep005_ == 1)
ks.test(ep005_1_female$ep005_,ep005_1_male$ep005_)
ep005_1_female <- data %>% filter(female == 1) %>% filter(ep005_ == 1)
ep005_1_male <- data %>% filter(female == 0) %>% filter(ep005_ == 1)
ks.test(ep005_1_female$casp,ep005_1_male$casp)
ep005_2_female <- data %>% filter(female == 1) %>% filter(ep005_ == 2)
ep005_2_male <- data %>% filter(female == 0) %>% filter(ep005_ == 2)
ks.test(ep005_2_female$casp,ep005_2_male$casp)
ep005_3_female <- data %>% filter(female == 1) %>% filter(ep005_ == 3)
ep005_3_male <- data %>% filter(female == 0) %>% filter(ep005_ == 3)
ks.test(ep005_3_female$casp,ep005_3_male$casp)
ep005_4_female <- data %>% filter(female == 1) %>% filter(ep005_ == 4)
ep005_4_male <- data %>% filter(female == 0) %>% filter(ep005_ == 4)
ks.test(ep005_4_female$casp,ep005_4_male$casp)
ep005_5_female <- data %>% filter(female == 1) %>% filter(ep005_ == 5)
ep005_5_male <- data %>% filter(female == 0) %>% filter(ep005_ == 5)
ks.test(ep005_5_female$casp,ep005_5_male$casp)
ep005_97_female <- data %>% filter(female == 1) %>% filter(ep005_ == 97)
ep005_97_male <- data %>% filter(female == 0) %>% filter(ep005_ == 97)
ks.test(ep005_97_female$casp,ep005_97_male$casp)
ep005_12_female <- data %>% filter(female == 1) %>% filter(ep005_ == -12)
ep005_12_male <- data %>% filter(female == 0) %>% filter(ep005_ == -12)
ks.test(ep005_12_female$casp,ep005_12_male$casp)
ep005_97_female <- data %>% filter(female == 1) %>% filter(ep005_ == 97)
ep005_97_male <- data %>% filter(female == 0) %>% filter(ep005_ == 97)
ks.test(ep005_97_female$casp,ep005_97_male$casp)
ep005_12_female <- data %>% filter(female == 1) %>% filter(ep005_ == -12)
ep005_12_male <- data %>% filter(female == 0) %>% filter(ep005_ == -12)
ks.test(ep005_12_female$casp,ep005_12_male$casp)
ep005_15_female <- data %>% filter(female == 1) %>% filter(ep005_ == -15)
ep005_15_male <- data %>% filter(female == 0) %>% filter(ep005_ == -15)
ks.test(ep005_12_female$casp,ep005_12_male$casp)
unique(ep009_mod)
unique(data$ep009_mod)
ep009_mod_1_female <- data %>% filter(female == 1) %>% filter(ep009_mod_ == 1)
ep009_mod_1_female <- data %>% filter(female == 1) %>% filter(ep009_mod_== 1)
unique(data$ep011_mod)
ep011_mod_1_female <- data %>% filter(female == 1) %>% filter(ep011_mod_ == 1)
ep011_mod_1_female <- data %>% filter(female == 1) %>% filter(ep011_ == 1)
ep011_mod_1_female <- data %>% filter(female == 1) %>% filter(ep011_mod == 1)
ep011_mod_1_female <- data %>% filter(female == 1) %>% filter(ep011_mod == 1)
ep011_mod_1_male <- data %>% filter(female == 0) %>% filter(ep011_mod == 1)
ks.test(ep011_mod_1_female$casp,ep011_mod_1_male$casp)
ep011_mod_2_female <- data %>% filter(female == 1) %>% filter(ep011_mod == 2)
ep011_mod_2_male <- data %>% filter(female == 0) %>% filter(ep011_mod == 2)
ks.test(ep011_mod_2_female$casp,ep011_mod_2_male$casp)
ep011_mod_9_female <- data %>% filter(female == 1) %>% filter(ep011_mod == -9)
ep011_mod_3_male <- data %>% filter(female == 0) %>% filter(ep011_mod == -9)
ks.test(ep011_mod_9_female$casp,ep011_mod_9_male$casp)
ep011_mod_9_female <- data %>% filter(female == 1) %>% filter(ep011_mod == -9)
ep011_mod_9_male <- data %>% filter(female == 0) %>% filter(ep011_mod == -9)
ks.test(ep011_mod_9_female$casp,ep011_mod_9_male$casp)
ep011_mod_12_female <- data %>% filter(female == 1) %>% filter(ep011_mod == -12)
ep011_mod_12_male <- data %>% filter(female == 0) %>% filter(ep011_mod == -12)
ks.test(ep011_mod_12_female$casp,ep011_mod_12_male$casp)
ep011_mod_15_female <- data %>% filter(female == 1) %>% filter(ep011_mod == -15)
ep011_mod_15_male <- data %>% filter(female == 0) %>% filter(ep011_mod == -15)
ks.test(ep011_mod_12_female$casp,ep011_mod_12_male$casp)
ep011_mod_15_female <- data %>% filter(female == 1) %>% filter(ep011_mod == -15)
ep011_mod_15_male <- data %>% filter(female == 0) %>% filter(ep011_mod == -15)
ks.test(ep011_mod_15_female$casp,ep011_mod_15_male$casp)
unique(data$co007_)
ep007_1_female <- data %>% filter(female == 1) %>% filter(ep007_ == 1)
co007_1_female <- data %>% filter(female == 1) %>% filter(co007_ == 1)
co007_1_male <- data %>% filter(female == 0) %>% filter(co007_ == 1)
ks.test(co007_1_female$casp,co007_1_male$casp)
co007_2_female <- data %>% filter(female == 1) %>% filter(co007_ == 2)
co007_2_male <- data %>% filter(female == 0) %>% filter(co007_ == 2)
ks.test(co007_2_female$casp,co007_2_male$casp)
co007_3_female <- data %>% filter(female == 1) %>% filter(co007_ == 3)
co007_3_male <- data %>% filter(female == 0) %>% filter(co007_ == 3)
ks.test(co007_3_female$casp,co007_3_male$casp)
co007_4_female <- data %>% filter(female == 1) %>% filter(co007_ == 4)
co007_4_male <- data %>% filter(female == 0) %>% filter(co007_ == 4)
ks.test(co007_4_female$casp,co007_4_male$casp)
co007_12_female <- data %>% filter(female == 1) %>% filter(co007_ == -12)
co007_12_male <- data %>% filter(female == 0) %>% filter(co007_ == -12)
ks.test(co007_12_female$casp,co007_12_male$casp)
co007_15_female <- data %>% filter(female == 1) %>% filter(co007_ == -15)
co007_15_male <- data %>% filter(female == 0) %>% filter(co007_ == -15)
ks.test(co007_12_female$casp,co007_12_male$casp)
unique(data$thinc_m)
typeof(data$casp)
cor.test(data$casp,data$thinc_m)
cor_casp_income <- cor.test(data$casp,data$thinc_m)
male_inc <- data$thinc_m %>% filter(female == 1)
female_inc <- data$thinc_m %>% filter(female == 1)
female_inc <- (data %>% filter(female == 1))$thinc_m
male_inc <- (data %>% filter(female == 0))$thinc_m
female_cor <- cor.test(female_inc,data$casp)
t.test(ep005_3_female$casp,ep005_3_male$casp)
t.test(ep005_4_female$casp,ep005_4_male$casp)
t.test(ep005_5_female$casp,ep005_5_male$casp)
t.test(ep005_12_female$casp,ep005_12_male$casp)
t.test(ep005_12_female$casp,ep005_12_male$casp)
ep005_15_female <- data %>% filter(female == 1) %>% filter(ep005_ == -15)
ep005_15_male <- data %>% filter(female == 0) %>% filter(ep005_ == -15)
ks.test(ep005_15_female$casp,ep005_15_male$casp)
t.test(ep005_15_female$casp,ep005_15_male$casp)
t.test(ep011_mod_1_female$casp,ep011_mod_1_male$casp)
t.test(ep011_mod_2_female$casp,ep011_mod_2_male$casp)
t.test(ep011_mod_12_female$casp,ep011_mod_12_male$casp)
t.test(co007_12_female$casp,co007_12_male$casp)
t.test(co007_12_female$casp,co007_12_male$casp)
?cor.test
cor_casp_income <- cor(data$casp,data$thinc_m)
?cor
female_casp <- (data %>% filter(female == 1))$casp
female_cor <- cor(female_inc,female_casp)
female_casp <- (data %>% filter(female == 1))$casp
male_casp <- (data %>% filter(female == 0))$casp
female_cor <- cor(female_inc,female_casp)
male_cor <- cor(male_inc,male_casp)
ks.test(female_cor,male_cor)
female_cor
male_cor
thinc_m_female <- (data %>% filter(female == 1))$thinc_m
thinc_m_male <- (data %>% filter(female == 0))$thinc_m
ks.test(thinc_m_female,thinc_m_male)
t.test(co007_15_female$casp,co007_15_male$casp)
co007_15_female <- data %>% filter(female == 1) %>% filter(co007_ == -15)
co007_15_male <- data %>% filter(female == 0) %>% filter(co007_ == -15)
ks.test(co007_15_female$casp,co007_15_male$casp)
t.test(casp_female$casp,casp_male$casp)
male_cor
female_cor
skim(data$thinc_m)
ggplot(data, aes(x = ep013_mod, y =casp), fill =female) + geom_boxplot()
ggplot(data, aes(x = ep013_mod, y =casp)) + geom_histogram()
ggplot(data, aes(x = ep013_mod)) + geom_histogram()
ggplot(data, aes(x = thinc_m)) + geom_histogram()
shiny::runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio1')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio1')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio1')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio1')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/porsi/OrtinMarina_ejercicio1_shiny.R')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp()
runApp()
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp()
runApp()
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp()
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp()
runApp()
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
?file.remove
?file.remove
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp()
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio2/Ejercicio2')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/porsi/Untitled.r')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/porsi/Untitled.r')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/porsi/Untitled.r')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/porsi/Untitled.r')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/porsi/Untitled.r')
runApp('Untitled.r')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/porsi/Untitled.r')
?readingTable
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
?readingTable
runApp()
runApp()
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp()
runApp()
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp()
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio1')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp()
runApp()
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp()
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio3/Ejercicio3')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio1')
shiny::runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio1')
runApp('C:/Users/marin/OneDrive/Escritorio/MOF_examenR2020/visualizacion/MOF_examen_visual_enero2020/Ejercicio1')
